var searchIndex = {};
searchIndex["conduit"] = {"doc":"","items":[[3,"TypeMap","conduit","",null,null],[3,"Response","","",null,null],[12,"status","","The status code as a tuple of the return code and status string",0,null],[12,"headers","","A Map of the headers",0,null],[12,"body","","A Writer for body of the response",0,null],[4,"Scheme","","",null,null],[13,"Http","","",1,null],[13,"Https","","",1,null],[4,"Host","","",null,null],[13,"Name","","",2,null],[13,"Socket","","",2,null],[4,"Method","","",null,null],[13,"Get","","",3,null],[13,"Post","","",3,null],[13,"Put","","",3,null],[13,"Delete","","",3,null],[13,"Head","","",3,null],[13,"Connect","","",3,null],[13,"Options","","",3,null],[13,"Trace","","",3,null],[13,"Patch","","",3,null],[13,"Purge","","",3,null],[13,"Other","","",3,null],[11,"new","","",4,{"inputs":[],"output":{"name":"typemap"}}],[11,"find","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"find_mut","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"insert","","",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"remove","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"contains","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"pop","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[6,"Extensions","","A Dictionary for extensions provided by the server or middleware",null,null],[8,"Request","","",null,null],[10,"http_version","","The version of HTTP being used",5,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[10,"conduit_version","","The version of the conduit spec being used",5,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[10,"method","","The request method, such as GET, POST, PUT, DELETE or PATCH",5,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[10,"scheme","","The scheme part of the request URL",5,{"inputs":[{"name":"self"}],"output":{"name":"scheme"}}],[10,"host","","The host part of the requested URL",5,{"inputs":[{"name":"self"}],"output":{"name":"host"}}],[10,"virtual_root","","The initial part of the request URL's path that corresponds to a virtual root. This allows an application to have a virtual location that consumes part of the path.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"path","","The remainder of the path.",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[10,"query_string","","The portion of the request URL that follows the \"?\"",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"remote_addr","","The remote IP address of the client or the last proxy that sent the request.",5,{"inputs":[{"name":"self"}],"output":{"name":"socketaddr"}}],[10,"content_length","","The byte-size of the body, if any",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"headers","","The request's headers, as conduit::Headers.",5,{"inputs":[{"name":"self"}],"output":{"name":"headers"}}],[10,"body","","A Reader for the body of the request",5,{"inputs":[{"name":"self"}],"output":{"name":"read"}}],[10,"extensions","","A readable map of extensions",5,{"inputs":[{"name":"self"}],"output":{"name":"extensions"}}],[10,"mut_extensions","","A mutable map of extensions",5,{"inputs":[{"name":"self"}],"output":{"name":"extensions"}}],[8,"Headers","","",null,null],[10,"find","","Find the value of a given header. Multi-line headers are represented as an array.",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"has","","Returns true if a particular header exists",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"all","","Iterate over all of the available headers.",6,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[8,"Handler","","A Handler takes a request and returns a response or an error. By default, a bare function implements `Handler`.",null,null],[10,"call","","",7,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"scheme"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"scheme"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"host"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"method"}}]],"paths":[[3,"Response"],[4,"Scheme"],[4,"Host"],[4,"Method"],[3,"TypeMap"],[8,"Request"],[8,"Headers"],[8,"Handler"]]};
initSearch(searchIndex);
